#!/bin/bash
#
# tomcat            Start up the Tomcat server daemon
#
# chkconfig:2345  80 30
#
# Author: pengyao(https://github.com/pengyao)
#

JAVA_HOME="/usr/local/jdk"
JAVA_OPTS=""
CATALINA_HOME="/usr/local/tomcat"
CATALINA_BASE="${CATALINA_HOME}"
CATALINA_OPTS=""
EXECUTABLE="${CATALINA_HOME}/bin/catalina.sh"
CATALINA_PID="${CATALINA_BASE}/logs/tomcat.pid"
TOMCAT_USER=""   
RETVAL=0

export JAVA_HOME JAVA_OPTS CATALINA_HOME CATALINA_BASE CATALINA_OPTS CATALINA_PID

PROG="Tomcat"
pidfile=${CATALINA_PID}


##functions
BOOTUP="color"
RES_COL=60
MOVE_TO_COL="echo -en \\033[${RES_COL}G"
SETCOLOR_SUCCESS="echo -en \\033[1;32m"
SETCOLOR_FAILURE="echo -en \\033[1;31m"
#SETCOLOR_WARNING="echo -en \\033[1;33m"
SETCOLOR_NORMAL="echo -en \\033[0;39m"

echo_success() {
   echo -en "\t\t\t\t\t"
   [ "$BOOTUP" = "color" ] && $MOVE_TO_COL
   echo -n "["
   [ "$BOOTUP" = "color" ] && $SETCOLOR_SUCCESS
   echo -n $"  OK  "
   [ "$BOOTUP" = "color" ] && $SETCOLOR_NORMAL
   echo -n "]"
   echo -e "\r"
   return 0
}

echo_failure() {
   echo -en "\t\t\t\t\t"
   [ "$BOOTUP" = "color" ] && $MOVE_TO_COL
   echo -n "["
   [ "$BOOTUP" = "color" ] && $SETCOLOR_FAILURE
   echo -n $"FAILED"
   [ "$BOOTUP" = "color" ] && $SETCOLOR_NORMAL
   echo -n "]"
   echo -e "\r"
   return 1
}

status(){
   if [ -f ${pidfile} ] && [ -d "/proc/`cat ${pidfile}`" ]; then
      echo -e "${PROG} is running"
      RETVAL=0
   else
      echo -e "${PROG} is not running"
      RETVAL=1
   fi

   return $RETVAL
}

start(){
   ##starting tomcat
   echo -n "Starting ${PROG}..."
   if [ -n "${TOMCAT_USER}" ];then
      su - ${TOMCAT_USER} -c "${EXECUTABLE} start" >/dev/null 2>&1
   else
      ${EXECUTABLE} start >/dev/null 2>&1
   fi
   RETVAL=$?
   if [ $RETVAL -eq 0 ];then
      echo_success
   else
      echo_failure
   fi
   return $RETVAL
}


stop(){
   ##stoping tomcat
   echo -n "Stoping ${PROG}..."
   if [ -n "${TOMCAT_USER}" ];then
      su - ${TOMCAT_USER} -c "${EXECUTABLE} stop -force" >/dev/null 2>&1
   else
      ${EXECUTABLE} stop -force >/dev/null 2>&1
   fi

   RETVAL=$?
   if [ $RETVAL -eq 0 ];then
      echo_success
   else
      echo_failure
   fi
   return $RETVAL
}



case "$1" in
start)
   status >/dev/null 2>&1
   [ $? = 0 ] || start
   ;;
stop)
   status >/dev/null 2>&1
   [ $? = 0 ] && stop
   ;;
restart)
   status >/dev/null 2>&1
   [ $? = 0 ] && stop && sleep 5
   start
   ;;
*)
   echo -e "Usage: $0 {start|stop|restart|status}"
   exit 2
esac
exit $?
